apply {
    plugin "com.android.application"
    plugin "kotlin-android"
}

project.ext.react = [
        entryFile      : "index.js",
        bundleAssetName: "index.android.bundle",
        bundleInDebug  : true,
        bundleInRelease: true,
        enableHermes   : true,  // clean and rebuild if changing
]

apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false

def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'

def enableHermes = project.ext.react.get("enableHermes", false);


android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId externalApplicationId
        minSdkVersion externalMinSdkVersion
        targetSdkVersion externalTargetSdkVersion
        versionCode externalVersionCode
        versionName externalVersionName
        multiDexEnabled true
        ndk {
            abiFilters  "arm64-v8a"
        }
    }
    signingConfigs {
        debug {
            keyAlias externalKeyAlias
            keyPassword externalKeyPassword
            storeFile file("${externalStoreFile}")
            storePassword externalKeyPassword
        }
        release {
            keyAlias externalKeyAlias
            keyPassword externalKeyPassword
            storeFile file("${externalStoreFile}")
            storePassword externalKeyPassword
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude('META-INF/LICENSE')
        exclude('META-INF/beans.xml')
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    lintOptions {
        abortOnError false
    }
    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"  // From node_modules


    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
    }

    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
//        implementation "org.webkit:android-jsc-intl:+"
    } else {
        implementation jscFlavor
    }

    implementation project(':react-native-aliavkit')
    implementation project (':lib:lib-base')
    implementation project (':common:AlivcMedia')
    implementation project (':common:AliyunEditor')
    implementation project (':common:AliyunCrop:crop')
    implementation project (':common:AliyunRecorder:record')
    implementation project (':common:AliyunVideoCommon')
    implementation project (':common:AliyunFileDownLoader')
    implementation project (':common:AliyunResample')
    implementation project (':common:AliyunSVideoBase')
    implementation project (':common:AliyunSvideoMusic')

    implementation project(':react-native-permissions')
    implementation project(':react-native-svg')
    implementation project(':react-native-video')
    implementation project(':react-native-gesture-handler')
    implementation project(':react-native-reanimated')
    implementation project(':react-native-image-filter-kit')
    implementation project(':@react-native-community-cameraroll')
    implementation project(':@react-native-community-image-editor')
    implementation project(':react-native-fast-image')
}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
